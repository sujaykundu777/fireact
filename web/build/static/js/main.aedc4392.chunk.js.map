{"version":3,"sources":["components/Navigation/index.js","constants/routes.js","components/Landing/index.js","components/Signin/index.js","components/Signup/index.js","components/App/index.js","serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","index.js"],"names":["Navigation","state","left","toggleDrawer","side","open","_this","setState","Object","defineProperty","classes","this","props","sideList","react_default","a","createElement","className","list","List_default","react_router_dom","to","ListItem_default","button","ListItemIcon_default","Home_default","ListItemText_default","primary","root","AppBar_default","position","Toolbar_default","IconButton_default","onClick","menuButton","color","aria-label","Menu_default","Typography_default","variant","grow","Button_default","navlink","Drawer_default","anchor","onClose","tabIndex","role","onKeyDown","React","Component","withStyles","flexGrow","marginLeft","marginRight","width","textDecoration","Landing","Grid_default","container","spacing","item","xs","Paper_default","paper","elevation","component","theme","objectSpread","mixins","gutters","paddingTop","unit","paddingBottom","padding","textAlign","Signin","Signup","App","components_Navigation","react_router","exact","path","Boolean","window","location","hostname","match","FirebaseContext","createContext","config","apiKey","process","YOUR_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","Firebase","classCallCheck","app","initializeApp","ReactDOM","render","context","Provider","value","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aedc4392.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\n//1. Import React Router \nimport { Link } from 'react-router-dom';\n\n// 2. Import Routes from router \nimport * as ROUTES from '../../constants/routes';\n\n\n// Styling for the Navigation Component\nconst styles = {\n    root: {\n      flexGrow: 1,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20,\n    },\n    list: {\n        width: 250,\n    },\n    navlink: {\n        color: '#ffffff',\n        textDecoration: \"none\"\n    }\n    \n  };\n\n// Navigation Component with all the routes\n  class Navigation extends React.Component{\n  \n     state = {\n          left: false\n     };\n     \n     toggleDrawer = (side, open) => () =>{\n         this.setState({\n             [side]: open,\n         });\n     }\n   render(){\n    const { classes } = this.props;\n    \n    const sideList = (\n            <div className={classes.list}>\n               <List>\n               <Link  to={ROUTES.LANDING}> \n                    <ListItem button>\n                          <ListItemIcon>\n                               <HomeIcon />\n                          </ListItemIcon>\n                          <ListItemText primary=\"Home\"/>\n                    </ListItem>\n                </Link>\n                    <ListItem button>\n                          <ListItemIcon>\n                                <HomeIcon />\n                          </ListItemIcon>\n                         <ListItemText primary=\"All Posts\" />\n                    </ListItem>\n                    <ListItem button>\n                          <ListItemIcon>\n                                <HomeIcon />\n                          </ListItemIcon>\n                         <ListItemText primary=\"Add Post\" />\n                    </ListItem>\n               </List>\n\n            </div>\n    );\n    \n    return(\n        <div className={classes.root}>\n        <AppBar position=\"static\">\n           <Toolbar>\n               <IconButton onClick={this.toggleDrawer('left', true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                 <MenuIcon />\n               </IconButton>\n               <Typography variant=\"h5\" color=\"inherit\" className={classes.grow}>\n                 React Firebase Blog\n               </Typography>\n            <Button color=\"inherit\"> <Link to={ROUTES.SIGN_IN} className={classes.navlink}> Login</Link></Button>\n           </Toolbar>\n        </AppBar>\n        <Drawer anchor=\"left\" open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n           <div \n              tabIndex={0}\n              role=\"button\"\n              onClick={this.toggleDrawer('left',false)}\n              onKeyDown={this.toggleDrawer('left', false)}\n              >\n              {sideList}      \n           </div>\n        </Drawer>\n    </div>\n    );\n}\n  } // End of class\nNavigation.propTypes ={\n    classes: PropTypes.object.isRequired,\n};\n\n\n\nexport default withStyles(styles)(Navigation);\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root: {\n      flexGrow: 1,\n      ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n    },\n});\n\nclass Landing extends Component {\n    \n  render() {\n       const { classes } = this.props;\n     return (\n      <div className={classes.root}> \n        <Grid container spacing={24}>\n           <Grid item xs={12}>\n              <Paper className={classes.paper} elevation={1}>\n                <Typography variant=\"h5\" component=\"h3\">\n                       Hello World\n                </Typography>\n                <Typography component=\"p\">\n                      This is a blog built using React, Material-UI and Firebase\n              </Typography>\n              </Paper> \n          </Grid>\n        \n        </Grid>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes ={\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Landing);\n","import React, {Component} from 'react';\n\nclass Signin extends Component{\n    render(){\n        return(\n           <h1> Login </h1>\n        );\n    }\n}\n\nexport default Signin;\n","import React, {Component} from 'react';\n\nclass Signup extends Component{\n    render(){\n        return(\n           <h1> Register </h1>\n\n           \n        );\n    }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\n// Setup Router \nimport { BrowserRouter as Router, Route}  from 'react-router-dom';\n\n// Import Navigation Component \nimport Navigation from '../Navigation';\nimport Landing from '../Landing';\nimport Signin from '../Signin';\nimport Signup from '../Signup';\n\nimport * as ROUTES from '../../constants/routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n        <Navigation/>\n      \n         <Route exact path={ROUTES.LANDING} component={Landing} />\n         <Route path={ROUTES.SIGN_UP} component={Signup} />\n         <Route path={ROUTES.SIGN_IN} component={Signin} />\n     \n       </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\n// creates a context using React Context API - Provider and Consumer \nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","  // Initialize Firebase\n\n  import app from 'firebase/app';\n\n  const config = {\n    apiKey: process.env.YOUR_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n  };\n  \n  class Firebase {\n      constructor(){\n          app.initializeApp(config);\n      }\n  }\n\n  export default Firebase;","import FirebaseContext from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport {FirebaseContext};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import Firebase \nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n   </FirebaseContext.Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}